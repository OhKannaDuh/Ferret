{
	// Place your ferret workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

    "File Header": {
        "scope": "lua",
        "prefix": "header",
        "body": [
            "--------------------------------------------------------------------------------",
            "--   DESCRIPTION: $1",
            "--        AUTHOR: Faye (OhKannaDuh)",
            "--------------------------------------------------------------------------------"
        ]
    },
    "Class": {
        "scope": "lua",
        "prefix": "_class",
        "body": [
            "---@class $TM_FILENAME_BASE : Object",
            "local $TM_FILENAME_BASE = Object:extend()"
        ]
    },
    "Function": {
        "scope": "lua",
        "prefix": "_func",
        "body": [
            "function $TM_FILENAME_BASE:$1()",
            "end"
        ]
    },
    "Addon": {
        "scope": "lua",
        "prefix": "_addon",
        "body": [
            "--------------------------------------------------------------------------------",
            "--   DESCRIPTION: Addon for the $1",
            "--        AUTHOR: Faye (OhKannaDuh)",
            "--------------------------------------------------------------------------------",
            "",
            "---@class $TM_FILENAME_BASE : Addon",
            "local $TM_FILENAME_BASE = Addon:extend()",
            "",
            "function $TM_FILENAME_BASE:new()",
            "    $TM_FILENAME_BASE.super.new(self, '$TM_FILENAME_BASE')",
            "end",
            "",
            "return $TM_FILENAME_BASE()",
            ""
        ]
    },
    "Action": {
        "scope": "lua",
        "prefix": "_action",
        "body": [
            "--------------------------------------------------------------------------------",
            "--   DESCRIPTION: Action for $TM_FILENAME_BASE",
            "--        AUTHOR: Faye (OhKannaDuh)",
            "--------------------------------------------------------------------------------",
            "",
            "---@class $TM_FILENAME_BASE : Action",
            "local $TM_FILENAME_BASE = Action:extend()",
            "function $TM_FILENAME_BASE:new()",
            "    $TM_FILENAME_BASE.super.new(self, i18n('actions.${TM_FILENAME_BASE/(\\w+)?[-_\\s]+(\\w+)/${1:/downcase}_${2:/downcase}/g}'))",
            "end",
            "",
            "return $TM_FILENAME_BASE()",
            "",
        ]
    },
    "Template": {
        "scope": "lua",
        "prefix": "_template",
        "body": [
            "--------------------------------------------------------------------------------",
            "--   DESCRIPTION: $TM_FILENAME_BASE",
            "--        AUTHOR: Faye (OhKannaDuh)",
            "--------------------------------------------------------------------------------",
            "",
            "require('Ferret/Ferret')",
            "",
            "---@class $TM_FILENAME_BASE : Ferret",
            "---@field item string|nil",
            "---@field starting_node Node|nil",
            "---@field start_time integer",
            "---@field end_time integer",
            "$TM_FILENAME_BASE = Ferret:extend()",
            "function $TM_FILENAME_BASE:new()",
            "    Spearfishing.super.new(self, i18n('templates.[name].name'))",
            "    self.template_version = Version(0, 1, 0)",
            "end",
            "",
            "function $TM_FILENAME_BASE:setup()",
            "    Logger:info(self.name .. ': ' .. self.template_version:to_string())",
            "",
            "    return true",
            "end",
            "",
            "function $TM_FILENAME_BASE:loop()",
            "    Ferret:stop()",
            "end",
            "",
            "local ferret = $TM_FILENAME_BASE()",
            "Ferret = ferret",
            "",
            "return ferret",
            "",
        ]
    }
}
